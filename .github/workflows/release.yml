name: Release

on:
  push:
    tags:
      - "v*" # Trigger this workflow only when a tag starting with "v" is pushed

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo git dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build the project
        run: cargo build --release

      - name: Move executable to OS-specific folder
        if: runner.os == 'Windows'
        run: |
          New-Item -ItemType Directory -Path output/windows
          Move-Item target\release\filecat.exe output\windows\filecat.exe
        shell: pwsh

      - name: Move executable for macOS or Linux
        if: runner.os != 'Windows'
        run: |
          mkdir -p output/${{ matrix.os }}
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv target/release/filecat output/macos/filecat
          else
            mv target/release/filecat output/linux/filecat
          fi
        shell: bash

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          artifacts: output/**/*
          draft: false
          prerelease: false
